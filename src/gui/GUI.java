/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import java.awt.CardLayout;
import java.io.File;
import java.util.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;

import utils.*;

/**
 *
 * @author Zoro
 */
public class GUI extends javax.swing.JFrame {

//Variable Declaration
private static String userType = null;
private static String userName = null;

private ArrayList<HashMap<String,String>> allMoviesal;

private ArrayList<String> movieTitleal = new ArrayList<>();
private ArrayList<String> foldersListal = new ArrayList<>();
private ArrayList<String> castBasedDetails = new ArrayList<>();
private ArrayList<String> genreBasedDetails = new ArrayList<>();

private HashMap<String,String> genrehm = new HashMap<>();
private HashMap<String,String> casthm = new HashMap<>();
/*
    Program will throw error if the cast of a particular movie returns as ""(empty).
*/
private HashMap<String,String> overviewhm = new HashMap<>();
private HashMap<String,String> posterPathhm = new HashMap<>();
private HashMap<String,String> idhm = new HashMap<>();

private static String imagePath;
private String temp;
    
    public GUI() {
        DbUtils.initDb();
        if(!DbUtils.checkTable("MOVIES")){
            DbUtils.createMovieDb();
        }
        if(!DbUtils.checkTable("LIBRARYFOLDER")){
            DbUtils.createMovieLibraryFolderDb();
        }
        if(!DbUtils.checkTable("LOGINDETAILS")){
            DbUtils.createLoginInfoDb();
        }       
        allMoviesal = DbUtils.getMovieDetails();
        getMovieData(); 
        imagePath = UrlUtils.getBaseImagePath();
        initComponents();    
        
    }
    
    public GUI(String imagePath,String className,String dburl,String password,String user) {
        UrlUtils.setBaseImagePath(imagePath);
        DbUtils.setClassName(className);
        DbUtils.setDatabaseurl(dburl);
        DbUtils.setPassword(password);
        DbUtils.setUser(user);     
        DbUtils.initDb();
        if(!DbUtils.checkTable("MOVIES")){
            DbUtils.createMovieDb();
        }
        if(!DbUtils.checkTable("LIBRARYFOLDER")){
            DbUtils.createMovieLibraryFolderDb();
        }
        if(!DbUtils.checkTable("LOGINDETAILS")){
            DbUtils.createLoginInfoDb();
        }       
        allMoviesal = DbUtils.getMovieDetails();
        getMovieData(); 
        imagePath = UrlUtils.getBaseImagePath();
        initComponents();         
    }
    public void getMovieData()
    {
        movieTitleal.clear();
        foldersListal.clear();
        genrehm.clear();
        idhm.clear();      
        casthm.clear();
        overviewhm.clear();
        posterPathhm.clear();
        for(int i=0; i<allMoviesal.size(); i++)
		{
			temp = allMoviesal.get(i).get("Title").replace("''", "'");
			movieTitleal.add(temp);
			foldersListal.add(allMoviesal.get(i).get("FolderName"));
			genrehm.put(temp, allMoviesal.get(i).get("Genres"));
			idhm.put(temp, allMoviesal.get(i).get("Id"));
			casthm.put(temp, allMoviesal.get(i).get("Cast"));
			posterPathhm.put(temp, allMoviesal.get(i).get("PosterPath"));
			overviewhm.put(temp, allMoviesal.get(i).get("Overview"));					             
       }
        Set<String> hs = new HashSet<>();
        hs.addAll(movieTitleal);
        movieTitleal.clear();
        movieTitleal.addAll(hs);
        Collections.sort(movieTitleal);
        hs.clear();
            
        hs.addAll(foldersListal);
        foldersListal.clear();
        foldersListal.addAll(hs);
        Collections.sort(foldersListal);           
    }     

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        basePanel = new javax.swing.JPanel();
        loginPanel = new javax.swing.JPanel();
        loginTitlePanel = new javax.swing.JPanel();
        loginPageLabel = new javax.swing.JLabel();
        credentialPanel = new javax.swing.JPanel();
        loginTypeComboBox = new javax.swing.JComboBox<>();
        userNameLabel = new javax.swing.JLabel();
        userNameTextField = new javax.swing.JTextField();
        loginAsLabel = new javax.swing.JLabel();
        passwordLabel = new javax.swing.JLabel();
        passwordField = new javax.swing.JPasswordField();
        acceptPanel = new javax.swing.JPanel();
        loginButton = new javax.swing.JButton();
        registerButton = new javax.swing.JButton();
        startPanel = new javax.swing.JPanel();
        startInternalPanel = new javax.swing.JPanel();
        addFolderButtonPanel = new javax.swing.JPanel();
        addFoldersButton = new javax.swing.JButton();
        openLibraryButtonPanel = new javax.swing.JPanel();
        openLibraryButton = new javax.swing.JButton();
        updateLibraryButtonPanel = new javax.swing.JPanel();
        updateLibraryButton = new javax.swing.JButton();
        logOutButton = new javax.swing.JButton();
        addFoldersPanel = new javax.swing.JPanel();
        addFoldersTitlePanel = new javax.swing.JPanel();
        titleLabel = new javax.swing.JLabel();
        BrowseTextField = new javax.swing.JTextField();
        addedFoldersScrollPane = new javax.swing.JScrollPane();
        addedFoldersList = new javax.swing.JList<>();
        BrowseButton = new javax.swing.JButton();
        AddButton = new javax.swing.JButton();
        OKButton = new javax.swing.JButton();
        RemoveButton = new javax.swing.JButton();
        movieLibraryPanel = new javax.swing.JPanel();
        movieTitleScrollPane = new javax.swing.JScrollPane();
        showMovieList = new javax.swing.JList<>();
        titleTextField = new javax.swing.JTextField();
        imageLabel = new javax.swing.JLabel();
        castScrollPane = new javax.swing.JScrollPane();
        castList = new javax.swing.JList<>();
        genreScrollPane = new javax.swing.JScrollPane();
        genreList = new javax.swing.JList<>();
        overviewScrollPane = new javax.swing.JScrollPane();
        overviewTextArea = new javax.swing.JTextArea();
        homeLibraryButton = new javax.swing.JButton();
        resetButton = new javax.swing.JButton();
        castLabel = new javax.swing.JLabel();
        genreLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(900, 650));

        basePanel.setPreferredSize(new java.awt.Dimension(900, 650));
        basePanel.setRequestFocusEnabled(false);
        basePanel.setLayout(new java.awt.CardLayout());

        loginPanel.setBackground(new java.awt.Color(102, 102, 255));

        loginTitlePanel.setBackground(java.awt.Color.green);

        loginPageLabel.setFont(new java.awt.Font("Times New Roman", 0, 48)); // NOI18N
        loginPageLabel.setForeground(new java.awt.Color(255, 51, 51));
        loginPageLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        loginPageLabel.setText("Login Page");

        javax.swing.GroupLayout loginTitlePanelLayout = new javax.swing.GroupLayout(loginTitlePanel);
        loginTitlePanel.setLayout(loginTitlePanelLayout);
        loginTitlePanelLayout.setHorizontalGroup(
            loginTitlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loginTitlePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(loginPageLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        loginTitlePanelLayout.setVerticalGroup(
            loginTitlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loginTitlePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(loginPageLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 102, Short.MAX_VALUE)
                .addContainerGap())
        );

        credentialPanel.setBackground(new java.awt.Color(102, 102, 255));

        loginTypeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Admin", "User" }));
        loginTypeComboBox.setSelectedItem("Admin");
        GUI.userType = loginTypeComboBox.getSelectedItem().toString();

        userNameLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        userNameLabel.setForeground(javax.swing.UIManager.getDefaults().getColor("ToolBar.dockingForeground"));
        userNameLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        userNameLabel.setText("USER NAME:");

        userNameTextField.setText("");

        loginAsLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        loginAsLabel.setForeground(javax.swing.UIManager.getDefaults().getColor("ToolBar.dockingForeground"));
        loginAsLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        loginAsLabel.setText("LOGIN AS:");

        passwordLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        passwordLabel.setForeground(javax.swing.UIManager.getDefaults().getColor("ToolBar.dockingForeground"));
        passwordLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        passwordLabel.setText("PASSWORD:");

        javax.swing.GroupLayout credentialPanelLayout = new javax.swing.GroupLayout(credentialPanel);
        credentialPanel.setLayout(credentialPanelLayout);
        credentialPanelLayout.setHorizontalGroup(
            credentialPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(credentialPanelLayout.createSequentialGroup()
                .addGap(97, 97, 97)
                .addGroup(credentialPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(userNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 115, Short.MAX_VALUE)
                    .addComponent(passwordLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(66, 66, 66)
                .addGroup(credentialPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(credentialPanelLayout.createSequentialGroup()
                        .addComponent(loginAsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(loginTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(userNameTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 450, Short.MAX_VALUE)
                    .addComponent(passwordField))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        credentialPanelLayout.setVerticalGroup(
            credentialPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(credentialPanelLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(credentialPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(loginTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(loginAsLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(67, 67, 67)
                .addGroup(credentialPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(userNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE)
                    .addComponent(userNameTextField))
                .addGap(34, 34, 34)
                .addGroup(credentialPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(passwordLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE)
                    .addComponent(passwordField))
                .addGap(35, 35, 35))
        );

        acceptPanel.setBackground(new java.awt.Color(102, 102, 255));

        loginButton.setText("LOGIN");
        loginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginButtonActionPerformed(evt);
            }
        });

        registerButton.setText("REGISTER");
        registerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout acceptPanelLayout = new javax.swing.GroupLayout(acceptPanel);
        acceptPanel.setLayout(acceptPanelLayout);
        acceptPanelLayout.setHorizontalGroup(
            acceptPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(acceptPanelLayout.createSequentialGroup()
                .addGap(143, 143, 143)
                .addComponent(loginButton, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(193, 193, 193)
                .addComponent(registerButton, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(166, Short.MAX_VALUE))
        );
        acceptPanelLayout.setVerticalGroup(
            acceptPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(acceptPanelLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(acceptPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(registerButton, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(loginButton, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(103, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout loginPanelLayout = new javax.swing.GroupLayout(loginPanel);
        loginPanel.setLayout(loginPanelLayout);
        loginPanelLayout.setHorizontalGroup(
            loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, loginPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(credentialPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(acceptPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addComponent(loginTitlePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        loginPanelLayout.setVerticalGroup(
            loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loginPanelLayout.createSequentialGroup()
                .addComponent(loginTitlePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(credentialPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(acceptPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        basePanel.add(loginPanel, "card1");

        startInternalPanel.setBackground(java.awt.Color.yellow);

        addFolderButtonPanel.setBackground(new java.awt.Color(255, 255, 102));

        addFoldersButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        addFoldersButton.setText("Add Folders");
        addFoldersButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addFoldersButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout addFolderButtonPanelLayout = new javax.swing.GroupLayout(addFolderButtonPanel);
        addFolderButtonPanel.setLayout(addFolderButtonPanelLayout);
        addFolderButtonPanelLayout.setHorizontalGroup(
            addFolderButtonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addFolderButtonPanelLayout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addComponent(addFoldersButton, javax.swing.GroupLayout.PREFERRED_SIZE, 764, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        addFolderButtonPanelLayout.setVerticalGroup(
            addFolderButtonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addFolderButtonPanelLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(addFoldersButton, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(51, Short.MAX_VALUE))
        );

        openLibraryButtonPanel.setBackground(new java.awt.Color(255, 255, 102));

        openLibraryButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        openLibraryButton.setText("Open Movie Library");
        openLibraryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openLibraryButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout openLibraryButtonPanelLayout = new javax.swing.GroupLayout(openLibraryButtonPanel);
        openLibraryButtonPanel.setLayout(openLibraryButtonPanelLayout);
        openLibraryButtonPanelLayout.setHorizontalGroup(
            openLibraryButtonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(openLibraryButtonPanelLayout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addComponent(openLibraryButton, javax.swing.GroupLayout.PREFERRED_SIZE, 764, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(60, Short.MAX_VALUE))
        );
        openLibraryButtonPanelLayout.setVerticalGroup(
            openLibraryButtonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(openLibraryButtonPanelLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(openLibraryButton, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(51, Short.MAX_VALUE))
        );

        updateLibraryButtonPanel.setBackground(new java.awt.Color(255, 255, 102));

        updateLibraryButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        updateLibraryButton.setText("Update Library");
        updateLibraryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateLibraryButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout updateLibraryButtonPanelLayout = new javax.swing.GroupLayout(updateLibraryButtonPanel);
        updateLibraryButtonPanel.setLayout(updateLibraryButtonPanelLayout);
        updateLibraryButtonPanelLayout.setHorizontalGroup(
            updateLibraryButtonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(updateLibraryButtonPanelLayout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addComponent(updateLibraryButton, javax.swing.GroupLayout.PREFERRED_SIZE, 764, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(60, Short.MAX_VALUE))
        );
        updateLibraryButtonPanelLayout.setVerticalGroup(
            updateLibraryButtonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(updateLibraryButtonPanelLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(updateLibraryButton, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(51, Short.MAX_VALUE))
        );

        logOutButton.setText("LogOut");
        logOutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logOutButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout startInternalPanelLayout = new javax.swing.GroupLayout(startInternalPanel);
        startInternalPanel.setLayout(startInternalPanelLayout);
        startInternalPanelLayout.setHorizontalGroup(
            startInternalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(startInternalPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(startInternalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addFolderButtonPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(openLibraryButtonPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(updateLibraryButtonPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, startInternalPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(logOutButton, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        startInternalPanelLayout.setVerticalGroup(
            startInternalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(startInternalPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(logOutButton, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addFolderButtonPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addComponent(openLibraryButtonPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addComponent(updateLibraryButtonPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );

        javax.swing.GroupLayout startPanelLayout = new javax.swing.GroupLayout(startPanel);
        startPanel.setLayout(startPanelLayout);
        startPanelLayout.setHorizontalGroup(
            startPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(startInternalPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        startPanelLayout.setVerticalGroup(
            startPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(startInternalPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        basePanel.add(startPanel, "card3");

        addFoldersPanel.setBackground(new java.awt.Color(102, 102, 255));
        addFoldersPanel.setMinimumSize(new java.awt.Dimension(900, 650));

        addFoldersTitlePanel.setBackground(java.awt.Color.green);

        titleLabel.setFont(new java.awt.Font("Times New Roman", 1, 48)); // NOI18N
        titleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleLabel.setText("Add / Remove Movie Directories");

        javax.swing.GroupLayout addFoldersTitlePanelLayout = new javax.swing.GroupLayout(addFoldersTitlePanel);
        addFoldersTitlePanel.setLayout(addFoldersTitlePanelLayout);
        addFoldersTitlePanelLayout.setHorizontalGroup(
            addFoldersTitlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addFoldersTitlePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titleLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 880, Short.MAX_VALUE)
                .addContainerGap())
        );
        addFoldersTitlePanelLayout.setVerticalGroup(
            addFoldersTitlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addFoldersTitlePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titleLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 89, Short.MAX_VALUE)
                .addContainerGap())
        );

        addedFoldersList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = DbUtils.getLibraryFolders();
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        addedFoldersScrollPane.setViewportView(addedFoldersList);

        BrowseButton.setText("Browse");
        BrowseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BrowseButtonActionPerformed(evt);
            }
        });

        AddButton.setText("Add");
        AddButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddButtonActionPerformed(evt);
            }
        });

        OKButton.setText("OK");
        OKButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OKButtonActionPerformed(evt);
            }
        });

        RemoveButton.setText("Remove");
        RemoveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RemoveButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout addFoldersPanelLayout = new javax.swing.GroupLayout(addFoldersPanel);
        addFoldersPanel.setLayout(addFoldersPanelLayout);
        addFoldersPanelLayout.setHorizontalGroup(
            addFoldersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(addFoldersTitlePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(addFoldersPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(addFoldersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(BrowseTextField)
                    .addComponent(addedFoldersScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 615, Short.MAX_VALUE))
                .addGap(47, 47, 47)
                .addGroup(addFoldersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(BrowseButton, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)
                    .addComponent(AddButton, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)
                    .addComponent(OKButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(RemoveButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        addFoldersPanelLayout.setVerticalGroup(
            addFoldersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addFoldersPanelLayout.createSequentialGroup()
                .addComponent(addFoldersTitlePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(addFoldersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(BrowseButton, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE)
                    .addComponent(BrowseTextField))
                .addGap(24, 24, 24)
                .addGroup(addFoldersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(addedFoldersScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 430, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(addFoldersPanelLayout.createSequentialGroup()
                        .addComponent(AddButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(RemoveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(OKButton, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 22, Short.MAX_VALUE))
        );

        basePanel.add(addFoldersPanel, "card4");

        movieLibraryPanel.setBackground(new java.awt.Color(255, 255, 51));

        showMovieList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = movieTitleal.toArray(new String[movieTitleal.size()]);
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        showMovieList.setBackground(new java.awt.Color(153, 153, 255));
        showMovieList.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        showMovieList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                showMovieListValueChanged(evt);
            }
        });
        movieTitleScrollPane.setViewportView(showMovieList);

        titleTextField.setBackground(new java.awt.Color(255, 51, 51));
        titleTextField.setFont(new java.awt.Font("Tahoma", 1, 12));
        titleTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        if(!movieTitleal.isEmpty()){
            titleTextField.setText(movieTitleal.get(0));
        }

        imageLabel.setToolTipText("");

        castList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = {"","","","",""};
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        castList.setBackground(new java.awt.Color(153, 153, 255));
        castList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                castListValueChanged(evt);
            }
        });
        castScrollPane.setViewportView(castList);

        genreList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "", "", "", "", "" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        genreList.setBackground(new java.awt.Color(153, 153, 255));
        genreList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                genreListValueChanged(evt);
            }
        });
        genreScrollPane.setViewportView(genreList);

        overviewTextArea.setEditable(false);
        overviewTextArea.setBackground(new java.awt.Color(153, 153, 255));
        overviewTextArea.setColumns(20);
        overviewTextArea.setLineWrap(true);
        overviewTextArea.setWrapStyleWord(true);
        overviewTextArea.setRows(5);
        overviewScrollPane.setViewportView(overviewTextArea);

        homeLibraryButton.setText("Home");
        homeLibraryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeLibraryButtonActionPerformed(evt);
            }
        });

        resetButton.setText("Reset");
        resetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetButtonActionPerformed(evt);
            }
        });

        castLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        castLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        castLabel.setText("Cast");

        genreLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        genreLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        genreLabel.setText("Genre");

        javax.swing.GroupLayout movieLibraryPanelLayout = new javax.swing.GroupLayout(movieLibraryPanel);
        movieLibraryPanel.setLayout(movieLibraryPanelLayout);
        movieLibraryPanelLayout.setHorizontalGroup(
            movieLibraryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(movieLibraryPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(movieLibraryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(movieTitleScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, movieLibraryPanelLayout.createSequentialGroup()
                        .addComponent(homeLibraryButton, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(resetButton, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(movieLibraryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(titleTextField)
                    .addGroup(movieLibraryPanelLayout.createSequentialGroup()
                        .addGroup(movieLibraryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(overviewScrollPane, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(movieLibraryPanelLayout.createSequentialGroup()
                                .addComponent(imageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(43, 43, 43)
                                .addGroup(movieLibraryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(castLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(genreLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(movieLibraryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(castScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                                    .addComponent(genreScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))))
                        .addGap(0, 16, Short.MAX_VALUE)))
                .addContainerGap())
        );
        movieLibraryPanelLayout.setVerticalGroup(
            movieLibraryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(movieLibraryPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(movieLibraryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(movieLibraryPanelLayout.createSequentialGroup()
                        .addComponent(movieTitleScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 540, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(movieLibraryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(homeLibraryButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(resetButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(movieLibraryPanelLayout.createSequentialGroup()
                        .addComponent(titleTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(movieLibraryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(movieLibraryPanelLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(imageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(movieLibraryPanelLayout.createSequentialGroup()
                                .addGap(38, 38, 38)
                                .addGroup(movieLibraryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(castScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(castLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(movieLibraryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(genreScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(genreLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(18, 18, 18)
                        .addComponent(overviewScrollPane)))
                .addGap(41, 41, 41))
        );

        basePanel.add(movieLibraryPanel, "card5");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 900, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(basePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 650, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(basePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void loginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginButtonActionPerformed
        String tempUserName = userNameTextField.getText();
        String tempPassword = new String(passwordField.getPassword());
        GUI.userType = loginTypeComboBox.getSelectedItem().toString();
        if(DbUtils.checkUserNameExists(tempUserName)){
            if(DbUtils.checkPasswordExists(tempPassword, tempUserName,  GUI.userType)){  
                 userNameTextField.setText("");
                 passwordField.setText("");
                 if(Objects.equals(GUI.userType, "Admin")){
                    CardLayout cl = (CardLayout)(basePanel.getLayout());
                     cl.show(basePanel, "card3");
                 }else{
                     homeLibraryButton.setText("Logout");
                     openLibraryButton.doClick();
                 }
            }else{
                JOptionPane.showMessageDialog(null,"Enter username and password Again");
                userNameTextField.setText("");
                passwordField.setText("");
            }
        }else{
            JOptionPane.showMessageDialog(null,"The UserName does not exist");
        }
    }//GEN-LAST:event_loginButtonActionPerformed

    private void registerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerButtonActionPerformed
            RegisterUser ru = new RegisterUser();
            ru.setVisible(rootPaneCheckingEnabled);        
    }//GEN-LAST:event_registerButtonActionPerformed

    private void addFoldersButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addFoldersButtonActionPerformed
        if(Objects.equals(GUI.userType, "Admin")){
                CardLayout cl = (CardLayout)(basePanel.getLayout());
                 cl.show(basePanel, "card4");      
        }else{
             JOptionPane.showMessageDialog(null,"You Need Administrative Privileges to access this feature","Error",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_addFoldersButtonActionPerformed

    private void openLibraryButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openLibraryButtonActionPerformed
                 if(!movieTitleal.isEmpty())
                 {         
                        String selValue = movieTitleal.get(0);
                        titleTextField.setText(selValue);
                        showMovieList.setListData(movieTitleal.toArray(new String[movieTitleal.size()]));  
                        String temp;
                        temp  = casthm.get(selValue).replace(", ", "\n");
                        castList.setListData(temp.split("[\\r\\n]+"));
                        temp = genrehm.get(selValue).replace(", ", "\n");
                        genreList.setListData(temp.split("[\\r\\n]+"));
                        overviewTextArea.setText(overviewhm.get(selValue));                              
                      temp = UrlUtils.getBaseImagePath() + idhm.get(selValue) + ".jpg";
                      File f = new File(temp);
                      if(f.exists())
                      {
                              imageLabel.setIcon(new ImageIcon(temp));
                      }else
                      {
                              UrlUtils.saveImgByPosterPath(idhm.get(selValue), posterPathhm.get(selValue));
                              imageLabel.setIcon(new ImageIcon(temp));
                      }                      
               }else{
                     String[] data = {"","","","",""};
                    castList.setListData(data);
                    genreList.setListData(data);
                    showMovieList.setListData(data);
                 }
                 CardLayout cl = (CardLayout)(basePanel.getLayout());
                 cl.show(basePanel, "card5");      
    }//GEN-LAST:event_openLibraryButtonActionPerformed

    private void updateLibraryButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateLibraryButtonActionPerformed
        if(Objects.equals(GUI.userType, "Admin")){
                String[] strings = DbUtils.getLibraryFolders();
                ArrayList <String> foldersPresent = new ArrayList<>(); 
                        ArrayList <String> moviesInDb = new ArrayList<>(); 
                for(String s: strings)
                        {
                    File f = new File(s);
                    if(f.exists())
                    {
                                        foldersPresent.clear();
                                        moviesInDb.clear();
                        foldersPresent.addAll(FileUtils.getMovieNames(s));
                                        moviesInDb.addAll(DbUtils.getFolderNamesByFolderPath(s));
                                        Collections.sort(foldersPresent);
                                        Collections.sort(moviesInDb);
                        if(moviesInDb.size() < foldersPresent.size())
                        {
                                                foldersPresent.removeAll(moviesInDb);
                                                for(Object o : foldersPresent)
                                                {                                  
                                                        HashMap<String,String> hm = UrlUtils.getMovieDetailsByName(o.toString());
                                                        if(hm != null)
                                                        {
                                                            hm.put("FolderBasePath", s);			   
                                                                DbUtils.storeInMovieDb(hm);
                                                                System.out.println("Adding " + o.toString());
                                                        }
                                                }											
                                        }else if(moviesInDb.size() > foldersPresent.size())					
                                                {        
                                                        moviesInDb.removeAll(foldersPresent);
                                                        for(Object o : moviesInDb)
                                                        {
                                                                System.out.println("Deleting " + o.toString());
                                                                DbUtils.deleteMoviesByFolderName(o.toString());
                                                        }                
                                                }							
                    }
                }    		
                allMoviesal = DbUtils.getMovieDetails();
                getMovieData(); 
                JOptionPane.showMessageDialog(null, "The Library is Updated");
        }else{
             JOptionPane.showMessageDialog(null,"You Need Administrative Privileges to access this feature","Error",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_updateLibraryButtonActionPerformed

    private void BrowseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BrowseButtonActionPerformed
       JFileChooser chooser = new JFileChooser(""); 
       chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
       int returnVal = chooser.showOpenDialog(this);
       File file = null;
       if (returnVal == JFileChooser.APPROVE_OPTION)
	   {
           file = chooser.getSelectedFile();
           BrowseTextField.setText(file.getAbsolutePath());
       }   
    }//GEN-LAST:event_BrowseButtonActionPerformed

    private void AddButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddButtonActionPerformed
        String path = BrowseTextField.getText();      
        if(!Objects.equals(path, ""))
        {
            ArrayList <String> movies = FileUtils.getMovieNames(path);
            for(Object o:movies)
			{
				HashMap<String,String> hm = UrlUtils.getMovieDetailsByName(o.toString());
				if(hm != null) 
				{
                    hm.put("FolderBasePath", path);
					DbUtils.storeInMovieDb(hm);                       
				}
            }
            DbUtils.storeInMovieLibraryFolderDb(path);
            allMoviesal = DbUtils.getMovieDetails();
            getMovieData();
            addedFoldersList.setListData(DbUtils.getLibraryFolders());
            BrowseTextField.setText("");
            JOptionPane.showMessageDialog(null, "The Folders are Added");   
        }
    }//GEN-LAST:event_AddButtonActionPerformed

    private void OKButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OKButtonActionPerformed
                CardLayout cl = (CardLayout)(basePanel.getLayout());
                 cl.show(basePanel, "card3");     
    }//GEN-LAST:event_OKButtonActionPerformed

    private void homeLibraryButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeLibraryButtonActionPerformed
        if(Objects.equals(homeLibraryButton.getText(), "Logout"))
        {
            CardLayout cl = (CardLayout)(basePanel.getLayout());
            cl.show(basePanel, "card1");
            homeLibraryButton.setText("Home");            
        }else
        {
            CardLayout cl = (CardLayout)(basePanel.getLayout());
            cl.show(basePanel, "card3");
        }
    }//GEN-LAST:event_homeLibraryButtonActionPerformed

    private void resetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetButtonActionPerformed
       openLibraryButton.doClick();
    }//GEN-LAST:event_resetButtonActionPerformed

    private void showMovieListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_showMovieListValueChanged
        if(showMovieList.getSelectedIndex() != -1)
        {
			
            String selValue = showMovieList.getSelectedValue();
			titleTextField.setText(selValue);
			temp = UrlUtils.getBaseImagePath() + idhm.get(selValue) + ".jpg";
			File f = new File(temp);
			if(f.exists())
			{
				imageLabel.setIcon(new ImageIcon(temp));
			}else
			{
				UrlUtils.saveImgByPosterPath(idhm.get(selValue), posterPathhm.get(selValue));
				imageLabel.setIcon(new ImageIcon(temp));
			}
		   temp = casthm.get(selValue).replace(", ", "\n");
		   castList.setListData(temp.split("[\\r\\n]+"));
		   temp = genrehm.get(selValue).replace(", ", "\n");
		   genreList.setListData(temp.split("[\\r\\n]+"));
		   overviewTextArea.setText(overviewhm.get(selValue));
        }
    }//GEN-LAST:event_showMovieListValueChanged

    private void castListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_castListValueChanged
        if(castList.getSelectedIndex() != -1)
		{
			temp =  castList.getSelectedValue();
			if(!(Objects.equals(temp, "") || Objects.equals(temp, null)))
			{
				castBasedDetails.clear();
				castBasedDetails = DbUtils.getCastBasedMovieDetails(temp);
				Collections.sort(castBasedDetails);
				showMovieList.setListData(castBasedDetails.toArray(new String[castBasedDetails.size()]));
			}       
        }
    }//GEN-LAST:event_castListValueChanged

    private void genreListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_genreListValueChanged
        if(genreList.getSelectedIndex() != -1)
		{
            temp =  genreList.getSelectedValue();
			if(!(Objects.equals(temp, "") || Objects.equals(temp, null)))
			{
				genreBasedDetails.clear();
				genreBasedDetails = DbUtils.getGenreBasedMovieDetails(temp);
				Collections.sort(genreBasedDetails);
				showMovieList.setListData(genreBasedDetails.toArray(new String[genreBasedDetails.size()]));
			}          
        }
    }//GEN-LAST:event_genreListValueChanged

    private void logOutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logOutButtonActionPerformed
                 CardLayout cl = (CardLayout)(basePanel.getLayout());
                 cl.show(basePanel, "card1");
    }//GEN-LAST:event_logOutButtonActionPerformed

    private void RemoveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RemoveButtonActionPerformed
        if(addedFoldersList.getSelectedIndex() != -1)
         {
             temp = addedFoldersList.getSelectedValue();     
             if(!Objects.equals(temp, ""))
             {  
                DbUtils.deleteLibraryFolders(temp);
                DbUtils.deleteMoviesByFolderBasePath(temp);
                allMoviesal = DbUtils.getMovieDetails();
                getMovieData();
                addedFoldersList.setListData(DbUtils.getLibraryFolders());
                JOptionPane.showMessageDialog(null, "The Folders are Removed");
             }
        }
    }//GEN-LAST:event_RemoveButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddButton;
    private javax.swing.JButton BrowseButton;
    private javax.swing.JTextField BrowseTextField;
    private javax.swing.JButton OKButton;
    private javax.swing.JButton RemoveButton;
    private javax.swing.JPanel acceptPanel;
    private javax.swing.JPanel addFolderButtonPanel;
    private javax.swing.JButton addFoldersButton;
    private javax.swing.JPanel addFoldersPanel;
    private javax.swing.JPanel addFoldersTitlePanel;
    private javax.swing.JList<String> addedFoldersList;
    private javax.swing.JScrollPane addedFoldersScrollPane;
    private javax.swing.JPanel basePanel;
    private javax.swing.JLabel castLabel;
    private javax.swing.JList<String> castList;
    private javax.swing.JScrollPane castScrollPane;
    private javax.swing.JPanel credentialPanel;
    private javax.swing.JLabel genreLabel;
    private javax.swing.JList<String> genreList;
    private javax.swing.JScrollPane genreScrollPane;
    private javax.swing.JButton homeLibraryButton;
    private javax.swing.JLabel imageLabel;
    private javax.swing.JButton logOutButton;
    private javax.swing.JLabel loginAsLabel;
    private javax.swing.JButton loginButton;
    private javax.swing.JLabel loginPageLabel;
    private javax.swing.JPanel loginPanel;
    private javax.swing.JPanel loginTitlePanel;
    private javax.swing.JComboBox<String> loginTypeComboBox;
    private javax.swing.JPanel movieLibraryPanel;
    private javax.swing.JScrollPane movieTitleScrollPane;
    private javax.swing.JButton openLibraryButton;
    private javax.swing.JPanel openLibraryButtonPanel;
    private javax.swing.JScrollPane overviewScrollPane;
    private javax.swing.JTextArea overviewTextArea;
    private javax.swing.JPasswordField passwordField;
    private javax.swing.JLabel passwordLabel;
    private javax.swing.JButton registerButton;
    private javax.swing.JButton resetButton;
    private javax.swing.JList<String> showMovieList;
    private javax.swing.JPanel startInternalPanel;
    private javax.swing.JPanel startPanel;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JTextField titleTextField;
    private javax.swing.JButton updateLibraryButton;
    private javax.swing.JPanel updateLibraryButtonPanel;
    private javax.swing.JLabel userNameLabel;
    private javax.swing.JTextField userNameTextField;
    // End of variables declaration//GEN-END:variables
}
